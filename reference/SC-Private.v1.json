{
  "openapi": "3.0.0",
  "info": {
    "title": "SC-Private",
    "version": "1.0",
    "description": "SureCritic's Private API",
    "contact": {
      "name": "None"
    }
  },
  "tags": [
    {
      "name": "Business Hours"
    },
    {
      "name": "Business Users"
    },
    {
      "name": "Business Reviews"
    },
    {
      "name": "Review Requests"
    },
    {
      "name": "Business Feedback Requests"
    },
    {
      "name": "Businesses"
    },
    {
      "name": "Categories"
    },
    {
      "name": "Users"
    },
    {
      "name": "Review Request Batch Files"
    }
  ],
  "servers": [
    {
      "url": "https://scstaging.surecritic.com/api"
    },
    {
      "url": "https://www.surecritic.com/api",
      "description": ""
    }
  ],
  "paths": {
    "/businesses.{format}": {
      "get": {
        "summary": "List Method",
        "tags": [
          "Businesses"
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "number"
                    },
                    "per_page": {
                      "type": "number"
                    },
                    "total_entries": {
                      "type": "number"
                    },
                    "total_pages": {
                      "type": "number"
                    },
                    "businesses": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "external_id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "state": {
                            "type": "number"
                          },
                          "review_count": {
                            "type": "number"
                          },
                          "rating_count": {
                            "type": "number"
                          },
                          "rating_avg": {
                            "type": "string",
                            "minLength": 1
                          },
                          "recommend_pct": {
                            "type": "string",
                            "minLength": 1
                          },
                          "brp_url": {
                            "type": "string",
                            "minLength": 1
                          },
                          "departments_enabled": {
                            "type": "boolean"
                          },
                          "review_reach_enabled": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "external_id",
                          "name",
                          "state",
                          "review_count",
                          "rating_count"
                        ]
                      }
                    }
                  },
                  "required": [
                    "current_page",
                    "per_page",
                    "total_entries",
                    "total_pages"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "current_page": 1,
                      "per_page": 100,
                      "total_entries": 10,
                      "total_pages": 1,
                      "businesses": [
                        {
                          "id": 2785,
                          "external_id": "1016861",
                          "name": "Gates Auto Body Alphorn",
                          "state": -2,
                          "review_count": 85,
                          "rating_count": 89,
                          "rating_avg": "4.719101",
                          "recommend_pct": "98.8764",
                          "brp_url": "https://scstaging.surecritic.com/reviews/gates-auto-body-alphorn",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        },
                        {
                          "id": 3754,
                          "external_id": "238",
                          "name": "Davidson Auto Body 1 Collision Network",
                          "state": -2,
                          "review_count": 31,
                          "rating_count": 31,
                          "rating_avg": "4.8709678",
                          "recommend_pct": "96.77419",
                          "brp_url": "https://scstaging.surecritic.com/reviews/davidson-auto-body-1-collision-network",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        },
                        {
                          "id": 3755,
                          "external_id": "3013628",
                          "name": "First Choice Collision Center",
                          "state": -2,
                          "review_count": 25,
                          "rating_count": 26,
                          "rating_avg": "4.730769",
                          "recommend_pct": "88.46154",
                          "brp_url": "https://scstaging.surecritic.com/reviews/first-choice-collision-center",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        },
                        {
                          "id": 2786,
                          "external_id": "3014228",
                          "name": "Marquis Auto Body",
                          "state": -2,
                          "review_count": 220,
                          "rating_count": 222,
                          "rating_avg": "4.963964",
                          "recommend_pct": "100.0",
                          "brp_url": "https://scstaging.surecritic.com/reviews/marquis-auto-body",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        },
                        {
                          "id": 3807,
                          "external_id": "3950",
                          "name": "Bay Custom Auto",
                          "state": -2,
                          "review_count": 1004,
                          "rating_count": 1014,
                          "rating_avg": "4.7968472",
                          "recommend_pct": "97.83038",
                          "brp_url": "https://scstaging.surecritic.com/reviews/bay-custom-auto",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        },
                        {
                          "id": 3383,
                          "external_id": "4335",
                          "name": "Prestige Auto Body & Frame",
                          "state": -2,
                          "review_count": 29,
                          "rating_count": 29,
                          "rating_avg": "4.827586",
                          "recommend_pct": "100.0",
                          "brp_url": "https://scstaging.surecritic.com/reviews/prestige-auto-body-and-frame",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        },
                        {
                          "id": 3833,
                          "external_id": "593",
                          "name": "Perryville CRASH1",
                          "state": -2,
                          "review_count": 10,
                          "rating_count": 10,
                          "rating_avg": "4.6000004",
                          "recommend_pct": "90.0",
                          "brp_url": "https://scstaging.surecritic.com/reviews/perryville-crash1",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        },
                        {
                          "id": 2609,
                          "external_id": "914191",
                          "name": "Southwest Collision",
                          "state": -2,
                          "review_count": 143,
                          "rating_count": 143,
                          "rating_avg": "4.7762237",
                          "recommend_pct": "98.6014",
                          "brp_url": "https://scstaging.surecritic.com/reviews/southwest-collision",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        },
                        {
                          "id": 3382,
                          "external_id": "926139",
                          "name": "Custom Body Works",
                          "state": -2,
                          "review_count": 47,
                          "rating_count": 48,
                          "rating_avg": "4.958333",
                          "recommend_pct": "100.0",
                          "brp_url": "https://scstaging.surecritic.com/reviews/custom-body-works",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        },
                        {
                          "id": 3815,
                          "external_id": "937520",
                          "name": "Polo Collision",
                          "state": -2,
                          "review_count": 15,
                          "rating_count": 15,
                          "rating_avg": "5.0",
                          "recommend_pct": "100.0",
                          "brp_url": "https://scstaging.surecritic.com/reviews/polo-collision",
                          "departments_enabled": false,
                          "review_reach_enabled": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "operationId": "get-businesses.",
        "description": "Returns a paged list of businesses controlled by the partner. The API returns up to 30 businesses per request. Results are sorted by external_id.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "The page number for the request. The default page is 1."
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "post": {
        "summary": "Create-or-Update Method",
        "operationId": "post-businesses.-format",
        "description": "Creates or updates a business. It does this by looking up the business by external_id, if it cannot find that business it creates it. If you would rather an error is returned when a business does not exist, use the Update method.\nAll new businesses are created in a pending state. The corresponding BRP will not be accessible until the business has been activated.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": " external_id ",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "show_hours",
            "description": "a boolean value indicating whether to display a business’ operating hours on their BRP. 1 and 0 can be used for True and False respectively."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "address[line_1]"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​address[line_2]"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​address[line_3]"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "address[municipality]",
            "description": "would correspond to City for US-based addresses"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "address[region]",
            "description": "For US, provide the 2-letter state abbreviation"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "address[postcode]",
            "description": "Zip code"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "address[country]",
            "description": "The two letter country code (ISO 3166 Alpha-2)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "website"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "phone"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email",
            "description": "this is a public email address for contacting the business"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "tags": [
          "Businesses"
        ]
      }
    },
    "/businesses/{external_id}.{format}": {
      "get": {
        "summary": "Show Method",
        "tags": [
          "Businesses"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "operationId": "get-businesses-external_id-.-format",
        "description": "Returns current detailed information for a partner business."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "external_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for your business"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "put": {
        "summary": "Update Method",
        "operationId": "put-businesses-external_id-.-format",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Updates an existing business. Returns an error if the business can not be found.",
        "tags": [
          "Businesses"
        ]
      },
      "delete": {
        "summary": "Destroy Method",
        "operationId": "delete-businesses-external_id-.-format",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Completely removes a pending business. This method will only work with pending businesses. Once a business has been activated it can only be deactivated, not permanently deleted.",
        "tags": [
          "Businesses"
        ]
      }
    },
    "/businesses/{external_id}/activate.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "external_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for your business"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "put": {
        "summary": "Activate Method",
        "operationId": "put-businesses-external_id-activate.-format",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Activate a pending or deactivated business.",
        "tags": [
          "Businesses"
        ]
      }
    },
    "/businesses/{external_id}/deactivate.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "external_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for your business"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "put": {
        "summary": "Deactivate Method",
        "operationId": "put-businesses-external_id-deactivate.-format",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Deactivate an active business.",
        "tags": [
          "Businesses"
        ]
      }
    },
    "/businesses/{external_id}/hours.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "external_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for your business"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "Show method",
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-businesses-external_id-hours.-format",
        "description": "Returns the current business hours.\n\nThis resource allows for the maintenance of a business’ displayed operating hours. For every day of the week, each business can either be “closed” or have up to two start and end times. For the purposes of this API, day of the week is expressed as an integer between 0 and 6 where 0 = Monday, 1 = Tuesday, ..., 6 = Sunday. All time parameters should be passed in the format HH:MM using a 24-hour clock. Time zones are not used for these display purposes.",
        "tags": [
          "Business Hours"
        ]
      },
      "put": {
        "summary": "Update method",
        "operationId": "put-businesses-external_id-hours.-format",
        "responses": {
          "200": {
            "description": "Success!"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "description": "Populates new business hours for this business.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "hours[​day_of_week]​[closed] ",
            "description": "a boolean value indicating the business is open or closed on this day - 0 and 1 would be open and closed respectively."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "hours[​day_of_week]​[start_time_1]",
            "description": "the start time in HH:MM format"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "hours[​day_of_week]​[end_time_1]",
            "description": "the end time"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "hours[​day_of_week]​[start_time_2]",
            "description": "the start time"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "hours[​day_of_week][end_time_2]",
            "description": "the end time"
          }
        ],
        "tags": [
          "Business Hours"
        ]
      }
    },
    "/businesses/{external_id}/users.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "external_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for your business"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "List Method",
        "tags": [
          "Business Users"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-businesses-external_id-users.-format",
        "description": "Returns a list of users who can control this business\n\nThis resource allows for the creation and authorization of users to administer a business via the SureCritic website. Users within SureCritic are identified by their email address. When granting\na user rights to a given business, the API will create the user if it does not exist in the database. Removing a user’s rights to a business does not remove them from SureCritic, only their rights to administer that business."
      },
      "post": {
        "summary": "Add method",
        "operationId": "post-businesses-external_id-users.-format",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Grants the user rights to administer this business. The user will be emailed to notify them of their new status. Existing users under this partner account can be added to a business just by passing the external id. If it is desired to add or create users, pass email and name fields in addition to the external id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​email_address",
            "description": "the email address of the user to be granted rights. It can be omitted if passing ​external_id ​of a user already created under this partner account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "external_id",
            "description": "an identifier that allows you to later update attributes of this user via the Users Resource. Can be used in lieu of ​email_address ​when adding existing users.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​first_name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "last_name"
          }
        ],
        "tags": [
          "Business Users"
        ]
      },
      "delete": {
        "summary": "Remove method",
        "operationId": "delete-businesses-external_id-users.-format",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Removes a user's rights to administer this business.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email_address",
            "required": true,
            "description": "the email address of the user whose rights are to be removed"
          }
        ],
        "tags": [
          "Business Users"
        ]
      }
    },
    "/businesses/{external_business_id}/reviews.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "external_business_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for your business"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "List Method",
        "tags": [
          "Business Reviews"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-businesses-external_id-reviews.-format",
        "description": "Returns a paged list of reviews controlled by the partner business. The API returns up to 30 reviews per request. Results are sorted by created_date ascending.\n\nThis is the primary interface for creating reviews within the SureCritic API. Reviews are identified by your own unique identifier referred to as the external_id. The external_id, as well as the business_external_id, is required whenever creating reviews.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "The page number for the request. The default page is 1."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​page_size",
            "description": "The number of reviews returned in the query."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "since",
            "description": "optional filter allowing only reviews since the given date. It should be in the format YYYY-MM-DD. The since parameter is inclusive of the passed date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "before",
            "description": "optional filter allowing only reviews before the given date. It should be in the format YYYY-MM-DD. The parameter is exclusive of the passed date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer_external_id",
            "description": "filter reviews by customer"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "service_order_id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email_address"
          }
        ]
      },
      "post": {
        "summary": "Create Method",
        "operationId": "post-businesses-external_business_id-reviews.-format",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Creates a review.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "external_id",
            "required": true,
            "description": "the external id of the review."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "rating",
            "description": "the overall rating as a value between 1 and 5",
            "required": true
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "recommends",
            "description": " a boolean value indicating whether the reviewer would recommend the business to a friend. 0 and 1 are used for “does not recommend” and “recommends” respectively."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "comments",
            "description": "text of the review"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​first_name",
            "description": "the customer/reviewer’s first name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​last_name",
            "description": "the customer/reviewer’s last name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email_address",
            "description": "the customer/reviewer’s email address"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "municipality",
            "description": "city or township of the customer/reviewer"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "region",
            "description": "of the customer/reviewer; for US, use the 2-letter state abbreviation"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "postcode",
            "description": "zip code of the customer/reviewer",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "country",
            "description": "The two letter country code (ISO 3166 Alpha-2). defaults to US."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "review_date",
            "description": "the date the review was created in the format YYYY-MM-DD, this defaults to the current date"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "service_date",
            "description": "the date of service in the format YYYY-MM-DD.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "service_performed",
            "description": "the short description of the service performed, such as “Collision Repair”"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "service_order_id",
            "description": "an identifier for the business/partner to indicate which visit the review corresponds to."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "year",
            "description": "The Model Year of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "make",
            "description": "The Make of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "The Model of the vehicle/item serviced",
            "name": "model"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "original_review_id",
            "description": "if creating a ReScore review, pass the id of the original review"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "third_person",
            "description": "a boolean value indicating whether the review was written in third person prose. Defaults to 0 (first person)."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "department_id",
            "description": "a numeric value to support business that have more than one department. Current values include sales = 1, service = 2, collision = 3."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "custom_fields[​field_identifier]​",
            "description": "a value for any partner-specific custom fields, replacing ​field_identifier w​ ith the appropriate value. Multiple custom fields can be specified."
          }
        ],
        "tags": [
          "Business Reviews"
        ]
      }
    },
    "/businesses/{external_business_id}/reviews/{external_review_id}.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "external_business_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for your business"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "external_review_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for the review"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "Show Method",
        "tags": [
          "Business Reviews"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-businesses-external_business_id-reviews-external_review_id-.-format",
        "description": "Returns current detailed information for a specific business review"
      }
    },
    "/businesses/{external_business_id}/feedback_requests.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "external_business_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for your business"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "List Method",
        "tags": [
          "Business Feedback Requests"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-businesses-external_business_id-feedback_requests.-format",
        "description": "Returns a paged list of feedback requests for the partner business. The API returns up to 30 feedback requests per request. Results are sorted by created_date descending.\n\nThis is the primary interface for creating feedback requests within the SureCritic API. Feedback requests encompass ReviewReach requests, and will include standard review requests in the future.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "The page number for the request. The default page is 1."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​page_size",
            "description": "The number of feedback requests returned in the query."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "since",
            "description": "optional filter allowing only feedback requests since the given date. It should be in the format YYYY-MM-DD. The since parameter is inclusive of the passed date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "before",
            "description": "optional filter allowing only feedback requests before the given date. It should be in the format YYYY-MM-DD. The parameter is exclusive of the passed date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "contact_external_id",
            "description": "filter requests by customer"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "external_transaction_id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email_address"
          }
        ]
      },
      "post": {
        "summary": "Create Method",
        "operationId": "post-businesses-external_business_id-feedback_requests.-format",
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "description": "Creates a new feedback request.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "contact_external_id",
            "description": "an external identifier for this customer"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​first_name",
            "description": "the customer/reviewer’s first name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​last_name",
            "description": "the customer/reviewer’s last name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email_address",
            "description": "the customer/reviewer’s email address"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "municipality",
            "description": "city or township of the customer/reviewer"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "region",
            "description": "of the customer/reviewer; for US, use the 2-letter state abbreviation"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "postcode",
            "description": "zip code of the customer/reviewer"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "year",
            "description": "The Model Year of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "make",
            "description": "The Make of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "The Model of the vehicle/item serviced",
            "name": "model"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "department_id",
            "description": "a numeric value to support business that have more than one department. Current values include sales = 1, service = 2, collision = 3."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "phone_number",
            "description": "​the phone number for the customer",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "transaction_external_id",
            "description": "an identifier for the business/partner to indicate which visit the review corresponds to. For example, the service order id or repair order id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "transaction_amount",
            "description": "the dollar amount of the related transaction"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​transaction_description",
            "description": "a string description of the transaction"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "vin",
            "description": "The vehicle identification number or serial number for the product referenced"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "country",
            "description": "The two letter country code (ISO 3166 Alpha-2). defaults to US."
          }
        ],
        "tags": [
          "Business Feedback Requests"
        ]
      }
    },
    "/reviews/requests.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "List Method",
        "tags": [
          "Review Requests"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-reviews-requests.-format",
        "description": "Returns a paged list of review requests created by the partner. The API returns up to 30 review requests per HTTP request. Results are sorted by request id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "The page number for the request. The default page is 1."
          }
        ]
      },
      "post": {
        "summary": "Create Method",
        "operationId": "post-reviews-requests.-format",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Creates a single review request.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "business_external_id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer_external_id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "first_name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​last_name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email_address"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "municipality",
            "description": "city or township"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "region",
            "description": "for US, use the 2-letter state abbreviation"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "postcode",
            "description": "zip code"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "country",
            "description": "The two letter country code (ISO 3166 Alpha-2). defaults to US."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​service_date",
            "description": "the date of service in the format YYYY-MM-DD."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "service_performed",
            "description": "the short description of the service performed, such as “Collision Repair”"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "year",
            "description": "The Model Year of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "make",
            "description": "The Make of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "model",
            "description": "The Model of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "surecritic_sends_email",
            "description": " a boolean flag (0 or 1, defaulting to 0) indicating whether SC is managing the email."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "service_order_id",
            "description": "an identifier for the business/partner to indicate which visit we are requesting the review of."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "​department_id ",
            "description": "a numeric value to support business that have more than one department. Current values include sales = 1, service = 2, collision = 3."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "custom_fields[​field_identifier]​",
            "description": "a value for any partner-specific custom fields, replacing ​'field_identifier' w​ith the appropriate value. Multiple custom fields can be specified."
          }
        ],
        "tags": [
          "Review Requests"
        ]
      }
    },
    "/reviews/requests/{request_id}.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "request_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for the request"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "Show Method",
        "tags": [
          "Review Requests"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-reviews-requests-request_id-.-format",
        "description": "Returns current detailed information for a review request, including whether it has been completed."
      }
    },
    "/reviews/requests/batch.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "post": {
        "summary": "Batch Create Method",
        "operationId": "post-reviews-requests-batch.-format",
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "description": "The same as standard create, but allows multiple review requests to be generated in a single call. This is accomplished by using array-style parameter naming. In the parameter names shown below you will see the prefix ​rr[​n​] ​on each parameter name. Replace ​n w​ ith the 0-based index of the parameter group.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[business_external_id]",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[customer_external_id]"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[first_name]"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​​[last_name]"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[email_address]"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[municipality]",
            "description": "city or township"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[region]",
            "description": "for US, use the 2-letter state abbreviation"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[postcode]",
            "description": "zip code"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[country]",
            "description": "The two letter country code (ISO 3166 Alpha-2). defaults to US."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​​[service_date]",
            "description": "the date of service in the format YYYY-MM-DD."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[service_performed]",
            "description": "the short description of the service performed, such as “Collision Repair”"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "rr[​n]​[year]",
            "description": "The Model Year of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[make]",
            "description": "The Make of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[model]",
            "description": "The Model of the vehicle/item serviced"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "rr[​n]​[surecritic_sends_email]",
            "description": " a boolean flag (0 or 1, defaulting to 0) indicating whether SC is managing the email."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[service_order_id]",
            "description": "an identifier for the business/partner to indicate which visit we are requesting the review of."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "rr[​n]​​[department_id]",
            "description": "a numeric value to support business that have more than one department. Current values include sales = 1, service = 2, collision = 3."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rr[​n]​[custom_fields][​field_identifier]​",
            "description": "a value for any partner-specific custom fields, replacing ​'field_identifier' w​ith the appropriate value. Multiple custom fields can be specified."
          }
        ],
        "tags": [
          "Review Requests"
        ]
      }
    },
    "/reviews/request_batch_files.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "List Method",
        "tags": [
          "Review Request Batch Files"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-reviews-request_batch_files.-format",
        "description": "Returns a paged list of review request batch files created by the partner. The API returns up to 30 review request batches per HTTP request. Results are sorted by batch id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "The page number for the request. The default page is 1."
          }
        ]
      },
      "post": {
        "summary": "Create Method",
        "operationId": "post-reviews-request_batch_files.-format",
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "description": "Creates a review request batch file for processing.",
        "tags": [
          "Review Request Batch Files"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "​file_uri",
            "description": "the location of the file to be downloaded",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "receipt_uri",
            "description": "a location to upload a receipt file. The receipt file will include the request codes and URLs for each review request created"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "callback_uri",
            "description": "an URL to be called as an HTTP GET request once processing is complete."
          }
        ]
      }
    },
    "/reviews/request_batch_files/{batch_id}.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "batch_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier for the batch file"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "Show Method",
        "tags": [
          "Review Request Batch Files"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-reviews-request_batch_files-batch_id-.-format",
        "description": "Returns current detailed information for a review request batch file, including whether it has been processed and the number of requests created. Included will be a processing state that can be either “queued, processing, finished, or canceled”."
      }
    },
    "/categories.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "List Method",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-categories.-format",
        "description": "Returns a list of categories in SureCritic.\n  \nThis resource allows you to look up the appropriate category codes available in SureCritic."
      }
    },
    "/users.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "List Method",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-users.-format",
        "description": "Returns a list of users administered by this account. The API returns up to 30 users per request. Results are sorted by external_id.\n\nThis resource allows you to manipulate users within the control of your account. Users created via this resource will be considered pending. They will not receive an email notification to activate their account until they have been added to a business.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "The page number for the request. The default page is 1"
          }
        ]
      },
      "post": {
        "summary": "Create-or-Update Method",
        "operationId": "post-users.-format",
        "responses": {
          "200": {
            "description": "Success!"
          },
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Creates or updates a user. It does this by looking up the user by external_id, if it cannot find that user it creates it. If you would rather an error is returned when a user does not exist, use the Update method.\n\nAll new users are created in a pending state. The new user will not receive an email for verification until they have been granted access to at least one business.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "external_id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email_address",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "first_name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "last_name"
          }
        ]
      }
    },
    "/users/{external_id}.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "external_id",
          "in": "path",
          "required": true,
          "description": "The external_id of the user"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "Show Method",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Success!"
          }
        },
        "operationId": "get-users-external_id-.-format",
        "description": "Returns detailed info on the user with the given external_id."
      },
      "put": {
        "summary": "Update Method",
        "operationId": "put-users-external_id-.-format",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Updates an existing user. Returns an error if the user can not be found.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "external_id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email_address",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "first_name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "last_name"
          }
        ]
      }
    },
    "/users/exists.{format}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "format",
          "in": "path",
          "required": true,
          "description": "XML or JSON"
        }
      ],
      "get": {
        "summary": "Exists Method",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "The user with the passed email address exists."
          },
          "404": {
            "description": "The user with the passed email address does not exist."
          }
        },
        "operationId": "get-users-exists.-format",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email_address",
            "description": "the email address",
            "required": true
          }
        ],
        "description": "A simple method to see if a user exists with the passed email address. It works for all SureCritic users, not just those controlled by the partner. It will return a 200 if a user with the passed email address does exist and a 404 if they do not."
      }
    }
  },
  "components": {
    "schemas": {
      "Business": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "external_id": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "state": {
            "type": "integer"
          },
          "rating_avg": {
            "type": "number"
          },
          "recommend_pct": {
            "type": "number"
          },
          "brp_url": {
            "type": "string",
            "minLength": 1
          },
          "show_hours": {
            "type": "boolean"
          },
          "address": {
            "type": "object",
            "properties": {
              "line_1": {
                "type": "string",
                "minLength": 1
              },
              "municipality": {
                "type": "string",
                "minLength": 1
              },
              "postcode": {
                "type": "string",
                "minLength": 1
              },
              "region": {
                "type": "string",
                "minLength": 1
              },
              "latitude": {
                "type": "number",
                "format": "float"
              },
              "longitude": {
                "type": "number"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "phone": {
            "type": "string",
            "minLength": 1
          },
          "website": {
            "type": "string",
            "minLength": 1
          },
          "email_address": {
            "type": "string",
            "minLength": 1
          },
          "about": {
            "type": "string",
            "minLength": 1
          },
          "category_1": {
            "type": "integer"
          },
          "category_2": {
            "type": "integer"
          },
          "category_3": {
            "type": "integer"
          }
        },
        "required": [
          "external_id",
          "name",
          "website",
          "email_address",
          "about",
          "category_1"
        ],
        "x-examples": {
          "Cory's Magic Carpets": {
            "id": 0,
            "external_id": "string",
            "name": "string",
            "state": 0,
            "rating_avg": 0,
            "recommend_pct": 0,
            "brp_url": "string",
            "show_hours": true,
            "address": {
              "line_1": "string",
              "municipality": "string",
              "postcode": "string",
              "region": "string",
              "latitude": 0,
              "longitude": 0,
              "line_2": "string",
              "line_3": "string",
              "country": "string"
            },
            "phone": "string",
            "website": "string",
            "email_address": "string",
            "about": "string",
            "category_1": 0,
            "category_2": 0,
            "category_3": 0
          }
        }
      }
    },
    "securitySchemes": {
      "API Key": {
        "type": "apiKey",
        "in": "query",
        "name": "api_key"
      }
    },
    "responses": {
      "403": {
        "description": "Not Authorized. Your API-KEY was missing or invalid"
      }
    },
    "parameters": {
      "Access-Control-Allow-Origin": {
        "name": "Access-Control-Allow-Origin",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "https://surecritic.stoplight.io"
      }
    }
  },
  "security": [
    {
      "API Key": []
    }
  ]
}